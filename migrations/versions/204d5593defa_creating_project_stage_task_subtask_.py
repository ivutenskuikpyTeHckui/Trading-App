"""creating project, stage, task, subtask, extension_project, comment, employee, project_manager

Revision ID: 204d5593defa
Revises: 6c7e434fea22
Create Date: 2024-03-10 20:06:10.918729

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '204d5593defa'
down_revision: Union[str, None] = '6c7e434fea22'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('extension_project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('additional_column', sa.String(), nullable=False),
    sa.Column('additional_value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=False),
    sa.Column('file', sa.LargeBinary(), nullable=True),
    sa.Column('pharmaceutical_substances', sa.String(), nullable=True),
    sa.Column('checkbox', sa.Boolean(), nullable=True),
    sa.Column('trade_name', sa.String(), nullable=True),
    sa.Column('international_nonproprietary_name', sa.String(), nullable=True),
    sa.Column('chemical_name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=False),
    sa.Column('stage_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['stage_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_manager',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('previous_stage', sa.Integer(), nullable=True),
    sa.Column('next_stage', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('file', sa.LargeBinary(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subtask',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comm', sa.String(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('subtask_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subtask_id'], ['subtask.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('stage_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('subtask_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['stage_id'], ['stage.id'], ),
    sa.ForeignKeyConstraint(['subtask_id'], ['subtask.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('employee')
    op.drop_table('comment')
    op.drop_table('subtask')
    op.drop_table('stage')
    op.drop_table('project_manager')
    op.drop_table('task')
    op.drop_table('project')
    op.drop_table('extension_project')
    # ### end Alembic commands ###
